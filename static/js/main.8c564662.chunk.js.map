{"version":3,"sources":["components/navbar/Navbar.jsx","components/profile/Profile.jsx","components/aboutMe/AboutMe.jsx","components/project/externalDisplay.jsx","components/project/Project.jsx","components/contact/Contact.jsx","components/cubeView/SceneFunctions.jsx","components/cubeView/UserInteraction.jsx","components/cubeView/CubeView.jsx","components/cubeView/CubeInit.jsx","components/cubeView/StarBackGround.jsx","App.js","index.js"],"names":["Navbar","props","React","useState","process","gitHubLink","setGitHubLink","resumeLink","setResumeLink","linkedInLink","className","href","target","rel","id","onMouseOver","document","getElementById","style","backgroundColor","display","onMouseOut","src","alt","ProfileInfo","data","name","jobTitle","AboutMe","sectionTitle","discription","ExDisplay","slideCounter","mobile","githubLink","demoLink","onClick","image","skills","map","skill","index","key","Project","displayProjectID","setDisplayProjectID","projects","project","UpdateProjectDisplay","length","Contact","state","email","message","event","this","setState","value","e","preventDefault","emailjs","sendForm","then","result","alert","console","log","text","error","reset","onSubmit","sendEmail","bind","method","htmlFor","type","onChange","onNameChange","aria-describedby","onEmailChange","onMessageChange","Component","updateFaces","counter","pageArray","cube","direction","backFaceIndex","temp","THREE","children","forEach","face","cubePosition","add","rotateOnAxis","Math","PI","remove","axis","set","arrowEvent","cubeAngle","start","angle","end","lastAngle","canRotate","rotate","TWEEN","to","delay","onUpdate","_object","rotateOnWorldAxis","onComplete","rotateClickEvent","object","pages","CubeView","mount","useRef","useEffect","scene","camera","window","innerWidth","innerHeight","position","z","renderer","alpha","setSize","current","appendChild","domElement","raycaster","mouse","clickableObjects","geometry","material","color","currentPage","aboutCounter","aboutPages","textLoader","imageLoader","load","font","generateShapes","title","nameGeometry","titleGeometry","computeBoundingBox","offset","boundingBox","max","x","min","translate","nameMesh","y","titleMesh","about","aboutme","aboutGeometry","aboutMesh","strings","split","charLength","discriptions","discriptionIndex","string","concat","disc","discriptionGeometry","discriptionMesh","skillTitle","skillTitleGeometry","skillTitleMesh","skillShape","skillGeometry","skillMesh","languages","language","languageShape","languageGeometry","languageMesh","imageGeometry","imageMaterial","backgroundImage","loadAboutPages","default","main","projectCounter","projectPages","clickable","i","frontFontMaterial","backFontMaterial","side","frontShapes","fontSize","backShapes","frontGeometry","backGeometry","frontText","backText","edges","outline","shapes","shortDiscription","skillList","j","cubeImage","transparent","opacity","projectImage","renderOrder","linkGeometry","linkMaterial","projectGitButton","link","hover","push","loadProjectPages","contactCounter","contactPages","githubIcon","depthTest","contactGitButton","linkedInIcon","contactLinkedInButton","linkedinLink","emailIcon","contactEmailButton","shape","mesh","hoverDiscription","defaultShape","defaultDiscription","defaultGeometry","defaultMesh","visible","emailShape","emailDiscription","emailGeometry","emailMesh","gitHubShape","gitHubDiscription","gitHubGeometry","gitHubMesh","linkedInShape","linkedInDiscription","linkedInGeometry","linkedInMesh","loadContactPages","contact","faces","aboutPageArray","topPage","bottomPage","initFaces","leftTriangleMesh","hoverAnimation","rightTriangleMesh","topTriangleMesh","bottomTriangleMesh","starGeometry","starArray","Float32Array","starCount","random","setAttribute","starMaterial","size","starField","initStarBackGround","angleX","lastX","sway1","sway2","sway3","sway4","sway5","sway6","chain","startCubeSway","addEventListener","curPage","intersects","intersectObjects","open","clientX","clientY","aspect","updateProjectionMatrix","render","animate","requestAnimationFrame","setFromCamera","obj","objects","page","easing","Quadratic","InOut","scale","addScalar","parent","ref","App","visual3DState","setVisual3DState","changeVisual","Profile","ReactDOM"],"mappings":"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","file":"static/js/main.8c564662.chunk.js","sourcesContent":["import React from 'react';\r\nimport './navbar.css';\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n  const [gitHubLink, setGitHubLink] = React.useState(process.env.PUBLIC_URL + '/img/navBar/gitTab.png');\r\n  const [resumeLink, setResumeLink] = React.useState(process.env.PUBLIC_URL + '/img/navBar/resumeLink.png');\r\n  const [linkedInLink, setLinkedInLink] = React.useState(process.env.PUBLIC_URL + '/img/navBar/linkedin.png');\r\n  \r\n  return (\r\n    <>\r\n\r\n    <div className=\"navWrapper\">\r\n\r\n      <div className=\"navLink\">\r\n        <a href={process.env.PUBLIC_URL + '/Resume.pdf'} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\r\n          <button className=\"button\" id=\"resumeLink\"\r\n\r\n            onMouseOver={() => {\r\n              document.getElementById(\"resumeLink\").style.backgroundColor = \"black\";\r\n              document.getElementById(\"resumeDesc\").style.display = \"block\";\r\n              setResumeLink(process.env.PUBLIC_URL + '/img/navBar/resumeLink_hover.png');\r\n            }}\r\n\r\n            onMouseOut={() => {\r\n              document.getElementById(\"resumeLink\").style.backgroundColor = \"rgb(204, 197, 0)\";\r\n              document.getElementById(\"resumeDesc\").style.display = \"none\";\r\n              setResumeLink(process.env.PUBLIC_URL + '/img/navBar/resumeLink.png');\r\n            }}>\r\n\r\n            <img className=\"linkImage\" src={resumeLink} alt=\"\"/>\r\n          </button>\r\n\r\n          <h5 className=\"tabDesc\" id=\"resumeDesc\">Resume</h5>\r\n\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"navLink\">\r\n        <a href=\"https://github.com/asnow4u?tab=repositories\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\r\n          <button className=\"button\" id=\"gitLink\"\r\n\r\n            onMouseOver={() => {\r\n              document.getElementById(\"gitLink\").style.backgroundColor = \"black\";\r\n              document.getElementById(\"gitDesc\").style.display = \"block\";\r\n              setGitHubLink(process.env.PUBLIC_URL + '/img/navBar/gitTab_hover.png');\r\n            }}\r\n\r\n            onMouseOut={() => {\r\n              document.getElementById(\"gitLink\").style.backgroundColor = \"rgb(204, 197, 0)\";\r\n              document.getElementById(\"gitDesc\").style.display = \"none\";\r\n              setGitHubLink(process.env.PUBLIC_URL + '/img/navBar/gitTab.png');\r\n            }}>\r\n\r\n            <img className=\"linkImage\" src={gitHubLink} alt=\"\"/>\r\n          </button>\r\n\r\n          <h5 className=\"tabDesc\" id=\"gitDesc\">Github</h5>\r\n\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"navLink\">\r\n        <a href=\"https://www.linkedin.com/in/asnow4u/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\r\n          <button className=\"button\" id=\"linkedInLink\"\r\n\r\n            onMouseOver={() => {\r\n              document.getElementById(\"linkedInLink\").style.backgroundColor = \"black\";\r\n              document.getElementById(\"linkedInDesc\").style.display = \"block\";\r\n            }}\r\n\r\n            onMouseOut={() => {\r\n              document.getElementById(\"linkedInLink\").style.backgroundColor = \"rgb(204, 197, 0)\";\r\n              document.getElementById(\"linkedInDesc\").style.display = \"none\";\r\n            }}>\r\n\r\n            <img className=\"linkImage\" src={linkedInLink} alt=\"\"/>\r\n          </button>\r\n\r\n          <h5 className=\"tabDesc\" id=\"linkedInDesc\">LinkedIn</h5>\r\n\r\n        </a>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './profile.css';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  return (\r\n    <div className=\"profileInfo\">\r\n\r\n      <div className=\"profileName\">\r\n        {props.data.name}\r\n      </div>\r\n      <div className=\"barDivider\"></div>\r\n      <div className=\"profileJob\">\r\n        {props.data.jobTitle}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport './aboutme.css';\r\n\r\nconst AboutMe = (props) => {\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"sectionTitle\">{props.data.sectionTitle}</div>\r\n      <div className=\"barDivider\"></div>\r\n      <div className=\"bioDiv\">\r\n        <div className=\"bio\">\r\n          {props.data.discription}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutMe;\r\n","import React from 'react';\r\n\r\n\r\nconst ExDisplay = (props) => {\r\n\r\n  const [slideCounter, setSlideCounter] = React.useState(0);\r\n\r\n  // //Increment counter\r\n  // React.useEffect(() => {\r\n  //\r\n  //   let timer = setInterval(() => {\r\n  //\r\n  //     if (slideCounter >= props.length -1) {\r\n  //       setSlideCounter(0);\r\n  //     } else {\r\n  //       setSlideCounter(slideCounter + 1);\r\n  //     }\r\n  //\r\n  //   }, 2500);\r\n  //\r\n  //   return () => clearInterval(timer);\r\n  //\r\n  // }, [slideCounter]);\r\n  //\r\n  //\r\n  // //Reset counter when new project is selected\r\n  // React.useEffect(() => {\r\n  //   setSlideCounter(0);\r\n  // }, [props.data]);\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"externalDisplay\" id=\"display\">\r\n      <div className=\"displayProject\">\r\n        <h3 className=\"displayTitle\">{props.data.name}</h3>\r\n\r\n        <div className=\"displayDisc\">\r\n\r\n          <p className=\"projectDisc\">\r\n            {props.data.mobile.discription}\r\n          </p>\r\n\r\n          <div className=\"displayButtons\">\r\n\r\n            <a href={props.data.githubLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img className=\"displayButton\" src={process.env.PUBLIC_URL + '/img/project/github.png'} alt=\"\"/>\r\n            </a>\r\n\r\n            {props.data.demoLink ?\r\n\r\n              <a href={props.data.demoLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img className=\"displayButton\" id=\"demoButton\" src={process.env.PUBLIC_URL + '/img/project/demo.png'} alt=\"\"/>\r\n              </a>\r\n\r\n              :\r\n\r\n              <></>\r\n            }\r\n\r\n            <img className=\"displayButton\" src={process.env.PUBLIC_URL + '/img/project/exit.png'} alt=\"\" onClick={() => {document.getElementById(\"display\").style.display = \"none\";}}/>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <img className=\"displayProjectImage\"  src={process.env.PUBLIC_URL + props.data.mobile.image[slideCounter]} alt=\"\"/>\r\n\r\n        <div className=\"displaySkills\">\r\n\r\n          {props.data.skills.map((skill, index) => {\r\n            return (\r\n              <h6 key={index} className=\"projectSkill\"> {skill} </h6>\r\n            );\r\n          })}\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExDisplay;\r\n","import React from 'react';\r\nimport ExDisplay from './externalDisplay';\r\nimport './project.css';\r\n\r\nconst Project = (props) => {\r\n\r\n  const [displayProjectID, setDisplayProjectID] = React.useState(0);\r\n\r\n\r\n  const UpdateProjectDisplay = (project, index) => {\r\n\r\n    let display = document.getElementById(\"display\").style.display = \"block\";\r\n    setDisplayProjectID(index);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"section\">\r\n\r\n      <div className=\"sectionTitle\">{props.data.sectionTitle}</div>\r\n      <div className=\"barDivider\"></div>\r\n\r\n      <div className=\"showcaseProjects\">\r\n        {props.data.projects.map((project, index) => {\r\n          return (\r\n            <div key={index} className=\"projectTile\" onClick={() => UpdateProjectDisplay(project, index)}>\r\n              <img className=\"projectImage\" src={process.env.PUBLIC_URL + project.mobile.image[0]} alt=\"\" />\r\n              <div className=\"projectTitle\">{project.name}</div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <ExDisplay data={props.data.projects[displayProjectID]} length={props.data.projects[displayProjectID].mobile.image.length}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","import React from 'react';\r\nimport emailjs from 'emailjs-com';\r\nimport './contact.css';\r\n\r\nclass Contact extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      message: \"\"\r\n    }\r\n  }\r\n\r\n  onNameChange(event) {\r\n    this.setState({name: event.target.value});\r\n  }\r\n\r\n  onEmailChange(event) {\r\n    this.setState({email: event.target.value});\r\n  }\r\n\r\n  onMessageChange(event) {\r\n    this.setState({message: event.target.value});\r\n  }\r\n\r\n  sendEmail(e) {\r\n    e.preventDefault();\r\n\r\n    emailjs.sendForm('service_7aclidw', 'template_zs0o21o', e.target, 'user_TTUupRfAYvDalWIqcNqW2')\r\n     .then((result) => {\r\n        alert(\"Thanks For The Email\");\r\n        console.log(result.text);\r\n     }, (error) => {\r\n         console.log(error.text);\r\n     });\r\n\r\n     e.target.reset();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"section\">\r\n        <div className=\"sectionTitle\">Lets Talk...</div>\r\n        <div className=\"barDivider\"></div>\r\n\r\n        <form className=\"contactForm\" id=\"contactForm\" onSubmit={this.sendEmail.bind(this)} method=\"POST\">\r\n          <div className=\"formGroup\">\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input type=\"text\" className=\"formControl\" value={this.state.name} onChange={this.onNameChange.bind(this)} name='name'/>\r\n          </div>\r\n\r\n          <div className=\"formGroup\">\r\n            <label htmlFor=\"exampleEmail\">Email address:</label>\r\n            <input type=\"email\" className=\"formControl\" aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)} name='email'/>\r\n          </div>\r\n          <div className=\"formGroup\">\r\n            <label htmlFor=\"message\">Message:</label>\r\n            <textarea className=\"formControl\" value={this.state.message} onChange={this.onMessageChange.bind(this)} name='message'></textarea>\r\n          </div>\r\n          <button type=\"submit\" className=\"submitButton\">Send</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import * as THREE from \"three\";\r\nimport * as TWEEN from \"@tweenjs/tween.js\";\r\n\r\n/*\r\n  => Updates each face to have the correct orientation\r\n  => Updates the cubePosition property of each face\r\n  => Updates visual elements(children) of the face based on the pageArray arg\r\n*/\r\nexport const updateFaces = (counter, pageArray, cube, direction) => {\r\n\r\n  //Upward Arrow was clicked\r\n  if (direction === \"up\") {\r\n\r\n    //Based on rotational movement of the cube, need to remove the children from the bottom face (becoming back) and add them to the back face (becoming top)\r\n    let temp = new THREE.Group();\r\n    let backFaceIndex;\r\n\r\n    //Loop through each face on the cube\r\n    cube.children.forEach((face, index) => {\r\n\r\n      //Top Face => Front Face\r\n      if (face.cubePosition === \"top\") {\r\n        face.cubePosition = \"front\";\r\n      }\r\n\r\n      //Bottom Face => Back Face\r\n      else if (face.cubePosition === \"bottom\") {\r\n        face.cubePosition = \"back\";\r\n\r\n        //Remove the children element to temp, later to be placed in the new top face\r\n        while (face.children.length) {\r\n          temp.add(face.children[0]);\r\n        }\r\n\r\n        face.rotateOnAxis(new THREE.Vector3(0, 0, 1), Math.PI);\r\n      }\r\n\r\n      //Front Face => Bottom Face\r\n      else if (face.cubePosition === \"front\") {\r\n        face.cubePosition = \"bottom\";\r\n      }\r\n\r\n      //Left Face\r\n      //Update Face Elements\r\n      else if (face.cubePosition === \"left\") {\r\n\r\n        //Remove previous children elements\r\n        while (face.children.length) {\r\n          face.remove(face.children[0]);\r\n        }\r\n\r\n        //Add new children\r\n        if (counter - 1 < 0) {\r\n          face.add(pageArray[pageArray.length -1]);\r\n        } else {\r\n          face.add(pageArray[counter -1]);\r\n        }\r\n\r\n        face.rotateOnAxis(new THREE.Vector3(0, 0, 1), Math.PI/2);\r\n      }\r\n\r\n      //Right Face\r\n      //Update Face Elements\r\n      else if (face.cubePosition === \"right\") {\r\n\r\n        //Remove previous children elements\r\n        while (face.children.length) {\r\n          face.remove(face.children[0]);\r\n        }\r\n\r\n        //Add new children\r\n        if (counter + 1 >= pageArray.length) {\r\n          face.add(pageArray[0]);\r\n        } else {\r\n          face.add(pageArray[counter + 1]);\r\n        }\r\n\r\n        face.rotateOnAxis(new THREE.Vector3(0, 0, 1), -Math.PI/2);\r\n      }\r\n\r\n      //Back Face => Top Face\r\n      else if (face.cubePosition === \"back\") {\r\n        face.cubePosition = \"top\";\r\n\r\n        //Grab index to update with new child elements\r\n        backFaceIndex = index;\r\n\r\n        face.rotateOnAxis(new THREE.Vector3(0, 0, 1), Math.PI);\r\n      }\r\n    });\r\n\r\n    //Place the back face children to the top face\r\n    while (temp.children.length) {\r\n      cube.children[backFaceIndex].add(temp.children[0]);\r\n    }\r\n  }\r\n\r\n\r\n  //Downward Arrow was clicked\r\n  else if (direction === \"down\") {\r\n\r\n    //Based on rotational movement of the cube, need to remove the children from the top face (becoming back) and add them to the back face (becoming bottom)\r\n    let temp = new THREE.Group();\r\n    let backFaceIndex;\r\n\r\n    //Loop through each face on the cube\r\n    cube.children.forEach((face, index) => {\r\n\r\n      //Top Face => Back Face\r\n      if (face.cubePosition === \"top\") {\r\n        face.cubePosition = \"back\";\r\n\r\n        //Remove the children elements to temp, later to be placed in the new bottom face\r\n        while (face.children.length) {\r\n          temp.add(face.children[0]);\r\n        }\r\n\r\n        face.rotateOnAxis(new THREE.Vector3(0, 0, 1), Math.PI);\r\n      }\r\n\r\n      //Bottom Face => Front Face\r\n      else if (face.cubePosition === \"bottom\") {\r\n        face.cubePosition = \"front\";\r\n      }\r\n\r\n      //Front Face => Top Face\r\n      else if (face.cubePosition === \"front\") {\r\n        face.cubePosition = \"top\";\r\n      }\r\n\r\n      //Left Face\r\n      //Update Face Elements\r\n      else if (face.cubePosition === \"left\") {\r\n\r\n        //Remove previous children elements\r\n        while (face.children.length) {\r\n          face.remove(face.children[0]);\r\n        }\r\n\r\n        //Add new children\r\n        if (counter - 1 < 0) {\r\n          face.add(pageArray[pageArray.length -1]);\r\n        } else {\r\n          face.add(pageArray[counter -1]);\r\n        }\r\n\r\n        face.rotateOnAxis(new THREE.Vector3(0, 0, 1), -Math.PI/2);\r\n      }\r\n\r\n      //Right Face\r\n      //Update Face Elements\r\n      else if (face.cubePosition === \"right\") {\r\n\r\n        //Remove previous children elements\r\n        while (face.children.length) {\r\n          face.remove(face.children[0]);\r\n        }\r\n\r\n        //Add new children\r\n        if (counter + 1 >= pageArray.length) {\r\n          face.add(pageArray[0]);\r\n        } else {\r\n          face.add(pageArray[counter + 1]);\r\n        }\r\n\r\n        face.rotateOnAxis(new THREE.Vector3(0, 0, 1), Math.PI/2);\r\n      }\r\n\r\n      //Back Face => Bottom Face\r\n      else if (face.cubePosition === \"back\") {\r\n        face.cubePosition = \"bottom\";\r\n\r\n        //Grab index to update with new child elements\r\n        backFaceIndex = index;\r\n\r\n        face.rotateOnAxis(new THREE.Vector3(0, 0, 1), Math.PI);\r\n      }\r\n    });\r\n\r\n    //Place the back face children to the bottom face\r\n    while (temp.children.length) {\r\n      cube.children[backFaceIndex].add(temp.children[0]);\r\n    }\r\n\r\n  }\r\n\r\n  //Left or Right arrow was clicked\r\n  else {\r\n\r\n    //Defined rotation axis based on direction arg\r\n    let axis = new THREE.Vector3();\r\n\r\n    if (direction === \"right\") {\r\n      axis.set(0, 0, 1);\r\n    } else if (direction === \"left\") {\r\n      axis.set(0, 0, -1);\r\n    }\r\n\r\n    //Loop through each face on the cube\r\n    cube.children.forEach((face) => {\r\n\r\n      //Top Face\r\n      //Rotate face based on axis\r\n      if (face.cubePosition === \"top\") {\r\n        face.rotateOnAxis(axis, Math.PI/2);\r\n      }\r\n\r\n      //Bottom Face\r\n      //Rotate face based on axis\r\n      else if (face.cubePosition === \"bottom\") {\r\n        face.rotateOnAxis(axis, -Math.PI/2);\r\n      }\r\n\r\n      //Front Face => Right Face || Left Face\r\n      else if (face.cubePosition === \"front\") {\r\n\r\n        if (direction === \"right\") {\r\n          face.cubePosition = \"left\";\r\n\r\n        } else if (direction === \"left\") {\r\n          face.cubePosition = \"right\";\r\n        }\r\n      }\r\n\r\n      //Back Face => Right Face || Left Face\r\n      //Add new element based on pageArray and counter\r\n      else if (face.cubePosition === \"back\") {\r\n\r\n        if (direction === \"right\") {\r\n          face.cubePosition = \"right\";\r\n\r\n          if (counter + 1 >= pageArray.length) {\r\n            face.add(pageArray[0]);\r\n          } else {\r\n            face.add(pageArray[counter +1]);\r\n          }\r\n\r\n        } else if (direction === \"left\") {\r\n          face.cubePosition = \"left\";\r\n\r\n          if (counter - 1 < 0) {\r\n            face.add(pageArray[pageArray.length -1]);\r\n          } else {\r\n            face.add(pageArray[counter -1]);\r\n          }\r\n        }\r\n      }\r\n\r\n      //Left Face => Front Face || Back Face\r\n      //Remove elements if becoming new Back face\r\n      else if (face.cubePosition === \"left\") {\r\n\r\n        if (direction === \"right\") {\r\n          face.cubePosition = \"back\";\r\n\r\n          //Remove elements\r\n          while (face.children.length) {\r\n            face.remove(face.children[0]);\r\n          }\r\n\r\n        } else if (direction === \"left\") {\r\n          face.cubePosition = \"front\";\r\n        }\r\n      }\r\n\r\n      //Right Face => Front Face || Back Face\r\n      //Remove elements if becoming new Back face\r\n      else if (face.cubePosition === \"right\") {\r\n\r\n        if (direction === \"right\") {\r\n          face.cubePosition = \"front\";\r\n\r\n        } else if (direction === \"left\") {\r\n          face.cubePosition = \"back\";\r\n\r\n          //Remove elements\r\n          while (face.children.length) {\r\n            face.remove(face.children[0]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport const arrowEvent = (cube, axis) => {\r\n\r\n  let cubeAngle = 0;\r\n  let start = {angle: cubeAngle};\r\n  let end = {angle: cubeAngle + Math.PI / 2};\r\n  let lastAngle = 0;\r\n\r\n  cube.canRotate = false;\r\n\r\n  let rotate = new TWEEN.Tween(start)\r\n    .to(end, 1000)\r\n    .delay(200)\r\n    .onUpdate(() => {\r\n      cubeAngle=rotate._object.angle;\r\n      cube.rotateOnWorldAxis(axis, cubeAngle - lastAngle);\r\n      lastAngle=cubeAngle;\r\n    })\r\n    .onComplete(() => {\r\n      cube.canRotate = true;\r\n    })\r\n    .start();\r\n}\r\n\r\n\r\nexport const arrowHover = (obj) => {\r\n\r\n  obj.object.hoverAnimation = true;\r\n\r\n  if (obj.object.name === \"leftTriangle\") {\r\n\r\n    new TWEEN.Tween(obj.object.position)\r\n      .to({x: \"-\" + 0.07}, 400)\r\n      .delay(100)\r\n      .easing(TWEEN.Easing.Quadratic.InOut)\r\n\r\n      .chain(\r\n        new TWEEN.Tween(obj.object.position)\r\n          .to({x: \"+\" + 0.07}, 400)\r\n          .easing(TWEEN.Easing.Quadratic.InOut)\r\n          .onComplete(() => {\r\n            obj.object.hoverAnimation = false;\r\n          })\r\n      )\r\n\r\n      .start();\r\n  }\r\n\r\n  else if (obj.object.name === \"rightTriangle\") {\r\n\r\n    new TWEEN.Tween(obj.object.position)\r\n      .to({x: \"+\" + 0.07}, 400)\r\n      .delay(100)\r\n      .easing(TWEEN.Easing.Quadratic.InOut)\r\n\r\n      .chain(\r\n        new TWEEN.Tween(obj.object.position)\r\n          .to({x: \"-\" + 0.07}, 400)\r\n          .easing(TWEEN.Easing.Quadratic.InOut)\r\n          .onComplete(() => {\r\n            obj.object.hoverAnimation = false;\r\n          })\r\n      )\r\n\r\n      .start();\r\n  }\r\n\r\n  else if (obj.object.name === \"topTriangle\") {\r\n\r\n    new TWEEN.Tween(obj.object.position)\r\n      .to({y: \"+\" + 0.07}, 400)\r\n      .delay(100)\r\n      .easing(TWEEN.Easing.Quadratic.InOut)\r\n\r\n      .chain(\r\n        new TWEEN.Tween(obj.object.position)\r\n          .to({y: \"-\" + 0.07}, 400)\r\n          .easing(TWEEN.Easing.Quadratic.InOut)\r\n          .onComplete(() => {\r\n            obj.object.hoverAnimation = false;\r\n          })\r\n      )\r\n\r\n      .start();\r\n  }\r\n\r\n  else if (obj.object.name === \"bottomTriangle\") {\r\n\r\n    new TWEEN.Tween(obj.object.position)\r\n      .to({y: \"-\" + 0.07}, 400)\r\n      .delay(100)\r\n      .easing(TWEEN.Easing.Quadratic.InOut)\r\n\r\n      .chain(\r\n        new TWEEN.Tween(obj.object.position)\r\n          .to({y: \"+\" + 0.07}, 400)\r\n          .easing(TWEEN.Easing.Quadratic.InOut)\r\n          .onComplete(() => {\r\n            obj.object.hoverAnimation = false;\r\n          })\r\n      )\r\n\r\n      .start();\r\n  }\r\n}\r\n\r\n\r\nexport const startCubeSway = (cube) => {\r\n\r\n  let angleX = 0;\r\n  let lastX = 0;\r\n\r\n  let sway1 = new TWEEN.Tween({angle: 0})\r\n  .to({angle: 0.1}, 3000)\r\n\r\n  .onUpdate(() => {\r\n    angleX = sway1._object.angle;\r\n    cube.rotateOnAxis(new THREE.Vector3(-1, 1, 0), angleX - lastX);\r\n    lastX = angleX;\r\n  })\r\n  .onComplete(() => {\r\n    angleX = 0;\r\n    lastX = 0;\r\n  });\r\n\r\n  let sway2 = new TWEEN.Tween({angle: 0})\r\n    .to({angle: 0.1}, 3000)\r\n    .onUpdate(() => {\r\n      angleX = sway2._object.angle;\r\n      cube.rotateOnAxis(new THREE.Vector3(1, 0, 1), angleX - lastX);\r\n      lastX = angleX;\r\n    })\r\n    .onComplete(() => {\r\n      angleX = 0;\r\n      lastX = 0;\r\n    });\r\n\r\n  let sway3 = new TWEEN.Tween({angle: 0})\r\n    .to({angle: 0.1}, 3000)\r\n    .onUpdate(() => {\r\n      angleX = sway3._object.angle;\r\n      cube.rotateOnAxis(new THREE.Vector3(1, -1, 0), angleX - lastX);\r\n      lastX = angleX;\r\n    })\r\n    .onComplete(() => {\r\n      angleX = 0;\r\n      lastX = 0;\r\n    });\r\n\r\n  let sway4 = new TWEEN.Tween({angle: 0})\r\n  .to({angle: 0.1}, 3000)\r\n\r\n  .onUpdate(() => {\r\n    angleX = sway4._object.angle;\r\n    // cube.rotateOnAxis(new THREE.Vector3(-1, 0, -1), angleX - lastX);\r\n    cube.rotateOnAxis(new THREE.Vector3(-1, 1, 0), angleX - lastX);\r\n    lastX = angleX;\r\n  })\r\n  .onComplete(() => {\r\n    angleX = 0;\r\n    lastX = 0;\r\n  });\r\n\r\n  let sway5 = new TWEEN.Tween({angle: 0})\r\n    .to({angle: 0.1}, 3000)\r\n    .onUpdate(() => {\r\n      angleX = sway5._object.angle;\r\n      // cube.rotateOnAxis(new THREE.Vector3(-1, -1, 0), angleX - lastX);\r\n      cube.rotateOnAxis(new THREE.Vector3(-1, 0, -1), angleX - lastX);\r\n      lastX = angleX;\r\n    })\r\n    .onComplete(() => {\r\n      angleX = 0;\r\n      lastX = 0;\r\n    });\r\n\r\n  let sway6 = new TWEEN.Tween({angle: 0})\r\n    .to({angle: 0.1}, 3000)\r\n    .onUpdate(() => {\r\n      angleX = sway6._object.angle;\r\n      // cube.rotateOnAxis(new THREE.Vector3(1, 1, 0), angleX - lastX);\r\n      cube.rotateOnAxis(new THREE.Vector3(1, -1, 0), angleX - lastX);\r\n      lastX = angleX;\r\n    })\r\n    .onComplete(() => {\r\n      angleX = 0;\r\n      lastX = 0;\r\n    });\r\n\r\n  sway1.chain(sway2);\r\n  sway2.chain(sway3);\r\n  sway3.chain(sway4);\r\n  sway4.chain(sway5);\r\n  sway5.chain(sway6);\r\n  sway6.chain(sway1);\r\n  sway1.start();\r\n}\r\n","import * as THREE from \"three\";\r\nimport {arrowEvent, updateFaces} from \"./SceneFunctions\";\r\n\r\n\r\n//Rotate cube to the left or right, updating the counter for the current page\r\nexport const rotateClickEvent = (object, cube, pages, counter) => {\r\n\r\n  if (object.name === \"leftTriangle\") {\r\n    arrowEvent(cube, new THREE.Vector3(0, 1, 0));\r\n\r\n    counter--;\r\n\r\n    if (counter < 0) {\r\n      counter = pages.length - 1;\r\n    }\r\n\r\n    updateFaces(counter, pages, cube, \"left\");\r\n  }\r\n\r\n  else if (object.name === \"rightTriangle\") {\r\n    arrowEvent(cube, new THREE.Vector3(0, -1, 0));\r\n\r\n    counter++;\r\n\r\n    if (counter === pages.length) {\r\n      counter = 0;\r\n    }\r\n\r\n    updateFaces(counter, pages, cube, \"right\");\r\n  }\r\n\r\n  return counter;\r\n}\r\n\r\n\r\n//Update objects that have a hover event or no longer be hovered over\r\nexport const hoverButtonEvent = (objects, page) => {\r\n\r\n  objects.forEach((object) => {\r\n\r\n    //Check for mouse over object\r\n    if (object.hover) {\r\n\r\n      //Show discription for object hovered over and hide default discription\r\n      if (page === \"contact\") {\r\n\r\n        if (object.name === \"emailIcon\") {\r\n          object.parent.children[5].children[0].visible = false;\r\n          object.parent.children[5].children[1].visible = true;\r\n        }\r\n\r\n        else if (object.name === \"gitIcon\") {\r\n          object.parent.children[5].children[0].visible = false;\r\n          object.parent.children[5].children[2].visible = true;\r\n        }\r\n\r\n        else if (object.name === \"linkedInIcon\") {\r\n          object.parent.children[5].children[0].visible = false;\r\n          object.parent.children[5].children[3].visible = true;\r\n        }\r\n      }\r\n\r\n      object.hover = false;\r\n    }\r\n\r\n    //Update objects when not hovered over but previously was\r\n    else if (object.scale.x > 1) {\r\n\r\n      //disable discription for object hovered over\r\n      if (page === \"contact\") {\r\n\r\n        object.parent.children[5].children.forEach((discription) => {\r\n          discription.visible = false;\r\n        });\r\n\r\n        object.parent.children[5].children[0].visible = true;\r\n      }\r\n\r\n      //Shrink down object\r\n      object.scale.addScalar(-0.05);\r\n    }\r\n\r\n  });\r\n}\r\n\r\n\r\n//Fire click event based on what icon was clicked on\r\nexport const iconClickEvent = (object, curPage) => {\r\n\r\n  if (curPage === \"project\") {\r\n    if (object.name === \"gitIcon\") {\r\n      window.open(object.link);\r\n    }\r\n  }\r\n\r\n  else if (curPage === \"contact\") {\r\n    if (object.name === \"gitIcon\" || object.name === \"linkedInIcon\" || object.name === \"emailIcon\") {\r\n      window.open(object.link);\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport * as THREE from \"three\";\r\nimport * as TWEEN from \"@tweenjs/tween.js\";\r\nimport {initFaces, loadAboutPages, loadProjectPages, loadContactPages} from \"./CubeInit\";\r\nimport {arrowEvent, arrowHover, updateFaces, startCubeSway} from \"./SceneFunctions\";\r\nimport {rotateClickEvent, hoverButtonEvent, iconClickEvent} from \"./UserInteraction\";\r\nimport {initStarBackGround, backgroundStarAnimation} from \"./StarBackGround\";\r\n\r\nconst CubeView = (props) => {\r\n\r\n  //Navigation Links\r\n  const [gitHubLink, setGitHubLink] = React.useState(process.env.PUBLIC_URL + '/img/navBar/gitTab.png');\r\n  const [resumeLink, setResumeLink] = React.useState(process.env.PUBLIC_URL + '/img/navBar/resumeLink.png');\r\n  const [linkedInLink, setLinkedInLink] = React.useState(process.env.PUBLIC_URL + '/img/navBar/linkedin.png');\r\n\r\n  const mount = React.useRef(null);\r\n\r\n  //Init component\r\n  React.useEffect(() => {\r\n\r\n    //Init scene componenets\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\r\n    camera.position.z = 6;\r\n    const renderer = new THREE.WebGLRenderer( {alpha: true});\r\n    renderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n    mount.current.appendChild(renderer.domElement);\r\n\r\n    const raycaster = new THREE.Raycaster();\r\n    const mouse = new THREE.Vector2();\r\n    const clickableObjects = [];\r\n\r\n    //Init Cube\r\n    let geometry = new THREE.BoxGeometry( 4, 4, 4 );\r\n    let material = new THREE.MeshBasicMaterial( { color: 0xffffff } );\r\n    const cube = new THREE.Mesh( geometry, material );\r\n    cube.canRotate = true;\r\n    cube.currentPage = \"about\";\r\n    scene.add( cube );\r\n\r\n    let aboutCounter = 0;\r\n    const aboutPages = [];\r\n    loadAboutPages(aboutPages, props.data.default.main);\r\n\r\n    let projectCounter = 0;\r\n    const projectPages = [];\r\n    loadProjectPages(projectPages, props.data.default.project.projects, clickableObjects);\r\n\r\n    let contactCounter = 0;\r\n    const contactPages = [];\r\n    loadContactPages(contactPages, props.data.default.contact, clickableObjects);\r\n\r\n    //Cube Faces\r\n    const cubeFaces = [6];\r\n    initFaces(cubeFaces, cube, aboutPages, projectPages[0], contactPages[0]);\r\n\r\n    //Init arrow indicators\r\n    let distance = 4;\r\n    let triangleHeight = 0.5;\r\n    let triangleWidth = 1;\r\n    geometry = new THREE.ConeGeometry( triangleWidth, triangleHeight, 2);\r\n    material = new THREE.MeshBasicMaterial( {color: 0x0b4480} );\r\n\r\n    //Left arrow indicator\r\n    const leftTriangleMesh = new THREE.Mesh(geometry, material);\r\n    leftTriangleMesh.rotateOnAxis(new THREE.Vector3(0, 1, 0), -Math.PI/2);\r\n    leftTriangleMesh.rotateOnAxis(new THREE.Vector3(1, 0, 0), Math.PI / 2);\r\n    leftTriangleMesh.position.add(new THREE.Vector3(-distance, 0, 0));\r\n    leftTriangleMesh.name = \"leftTriangle\";\r\n    leftTriangleMesh.hoverAnimation = false;\r\n    clickableObjects.push(leftTriangleMesh);\r\n    scene.add(leftTriangleMesh);\r\n\r\n    //Right arrow indicator\r\n    const rightTriangleMesh = new THREE.Mesh(geometry, material);\r\n    rightTriangleMesh.rotateOnAxis(new THREE.Vector3(0, 1, 0), -Math.PI/2);\r\n    rightTriangleMesh.rotateOnAxis(new THREE.Vector3(1, 0, 0), -Math.PI / 2);\r\n    rightTriangleMesh.position.add(new THREE.Vector3(distance, 0, 0));\r\n    rightTriangleMesh.name = \"rightTriangle\";\r\n    rightTriangleMesh.hoverAnimation = false;\r\n    clickableObjects.push(rightTriangleMesh);\r\n    scene.add(rightTriangleMesh);\r\n\r\n    //Top arrow indicator\r\n    const topTriangleMesh = new THREE.Mesh(geometry, material);\r\n    topTriangleMesh.rotateOnAxis(new THREE.Vector3(0, 1, 0), -Math.PI/2);\r\n    topTriangleMesh.position.add(new THREE.Vector3(0, distance, 0));\r\n    topTriangleMesh.name = \"topTriangle\";\r\n    topTriangleMesh.hoverAnimation = false;\r\n    clickableObjects.push(topTriangleMesh);\r\n    scene.add(topTriangleMesh);\r\n\r\n    //Bottom arrow indicator\r\n    const bottomTriangleMesh = new THREE.Mesh(geometry, material);\r\n    bottomTriangleMesh.rotateOnAxis(new THREE.Vector3(0, 1, 0), -Math.PI/2);\r\n    bottomTriangleMesh.rotateOnAxis(new THREE.Vector3(1, 0, 0), Math.PI);\r\n    bottomTriangleMesh.position.add(new THREE.Vector3(0, -distance, 0));\r\n    bottomTriangleMesh.name = \"bottomTriangle\";\r\n    bottomTriangleMesh.hoverAnimation = false;\r\n    clickableObjects.push(bottomTriangleMesh);\r\n    scene.add(bottomTriangleMesh);\r\n\r\n    //Init background\r\n    initStarBackGround(scene);\r\n\r\n    //Init twit sway on cube\r\n    startCubeSway(cube);\r\n\r\n\r\n    //Animate each frame\r\n    const animate = () => {\r\n      requestAnimationFrame( animate);\r\n\r\n      TWEEN.update();\r\n\r\n      //Mouse raycast\r\n      raycaster.setFromCamera( mouse, camera);\r\n      const intersects = raycaster.intersectObjects( clickableObjects);\r\n\r\n      //Check intersection\r\n      if (intersects.length > 0) {\r\n\r\n        //Check for arrow indicator intersection\r\n        if (intersects[0].object.name === \"leftTriangle\" || intersects[0].object.name === \"rightTriangle\" || intersects[0].object.name === \"topTriangle\" || intersects[0].object.name === \"bottomTriangle\") {\r\n          if (!intersects[0].object.hoverAnimation) {\r\n            arrowHover(intersects[0]);\r\n          }\r\n        }\r\n\r\n        //Check for contact icon intersection\r\n        if (intersects[0].object.name === \"gitIcon\" || intersects[0].object.name === \"linkedInIcon\" || intersects[0].object.name === \"emailIcon\") {\r\n\r\n          intersects[0].object.hover = true;\r\n\r\n          if (intersects[0].object.scale.x < 1.2) {\r\n            intersects[0].object.scale.addScalar(0.05);\r\n          }\r\n        }\r\n      }\r\n\r\n      //Check if contact icon is being hovered over or not\r\n      hoverButtonEvent(clickableObjects, cube.currentPage);\r\n\r\n      //Animate background\r\n      backgroundStarAnimation(scene.children[5]);\r\n\r\n      renderer.render( scene, camera);\r\n    }\r\n\r\n\r\n    //Check for mouse click\r\n    window.addEventListener('mousedown', () => {\r\n\r\n      const intersects = raycaster.intersectObjects( clickableObjects);\r\n\r\n      //Check that an intersection exists\r\n      if (intersects.length > 0) {\r\n\r\n        //Check if cube is currently not rotating\r\n        if (cube.canRotate) {\r\n\r\n          //Check for left or right arrow indicator as click object\r\n          if (intersects[0].object.name === \"leftTriangle\" || intersects[0].object.name === \"rightTriangle\") {\r\n\r\n            if (cube.currentPage === \"about\") {\r\n              aboutCounter = rotateClickEvent(intersects[0].object, cube, aboutPages, aboutCounter);\r\n            }\r\n\r\n            else if (cube.currentPage === \"project\") {\r\n              projectCounter = rotateClickEvent(intersects[0].object, cube, projectPages, projectCounter);\r\n            }\r\n\r\n            else if (cube.currentPage === \"contact\") {\r\n              contactCounter = rotateClickEvent(intersects[0].object, cube, contactPages, contactCounter);\r\n            }\r\n          }\r\n\r\n          //Check for top arrow indicator as click object\r\n          else if (intersects[0].object.name === \"topTriangle\") {\r\n            arrowEvent(cube, new THREE.Vector3(1, 0, 0));\r\n\r\n            if (cube.currentPage === \"about\") {\r\n              cube.currentPage = \"project\";\r\n              updateFaces(projectCounter, projectPages, cube, \"up\");\r\n            }\r\n\r\n            else if (cube.currentPage === \"project\") {\r\n              cube.currentPage = \"contact\";\r\n              updateFaces(contactCounter, contactPages, cube, \"up\");\r\n            }\r\n\r\n            else if (cube.currentPage === \"contact\") {\r\n              cube.currentPage = \"about\";\r\n              updateFaces(aboutCounter, aboutPages, cube, \"up\");\r\n            }\r\n          }\r\n\r\n          //Check for bottom arrow indicator as click object\r\n          else if (intersects[0].object.name === \"bottomTriangle\") {\r\n            arrowEvent(cube, new THREE.Vector3(-1, 0, 0));\r\n\r\n            if (cube.currentPage === \"about\") {\r\n              cube.currentPage = \"contact\";\r\n              updateFaces(contactCounter, contactPages, cube, \"down\");\r\n            }\r\n\r\n            else if (cube.currentPage === \"project\") {\r\n              cube.currentPage = \"about\";\r\n              updateFaces(aboutCounter, aboutPages, cube, \"down\");\r\n            }\r\n\r\n            else if (cube.currentPage === \"contact\") {\r\n              cube.currentPage = \"project\";\r\n              updateFaces(projectCounter, projectPages, cube, \"down\");\r\n            }\r\n          }\r\n        }\r\n\r\n        //Check for icon intersection\r\n        iconClickEvent(intersects[0].object, cube.currentPage);\r\n      }\r\n\r\n    }, false);\r\n\r\n\r\n    //Update mouse coordinates\r\n    window.addEventListener('mousemove', (event) => {\r\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n        mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\r\n      }, false);\r\n\r\n\r\n    //Update window\r\n    window.addEventListener('resize', () => {\r\n      renderer.setSize( window.innerWidth, window.innerHeight );\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.render( scene, camera);\r\n    });\r\n\r\n    //Start animation loop\r\n    animate();\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"viewContainer\">\r\n      <div className=\"view\" ref={mount} />\r\n\r\n      <div className=\"navWrapper\">\r\n\r\n        <div className=\"navLink\">\r\n          <a href={process.env.PUBLIC_URL + '/Resume.pdf'} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\r\n            <button className=\"button\" id=\"resumeLink\"\r\n\r\n              onMouseOver={() => {\r\n                document.getElementById(\"resumeLink\").style.backgroundColor = \"black\";\r\n                document.getElementById(\"resumeDesc\").style.display = \"block\";\r\n                setResumeLink(process.env.PUBLIC_URL + '/img/navBar/resumeLink_hover.png');\r\n              }}\r\n\r\n              onMouseOut={() => {\r\n                document.getElementById(\"resumeLink\").style.backgroundColor = \"rgb(204, 197, 0)\";\r\n                document.getElementById(\"resumeDesc\").style.display = \"none\";\r\n                setResumeLink(process.env.PUBLIC_URL + '/img/navBar/resumeLink.png');\r\n              }}>\r\n\r\n              <img className=\"linkImage\" src={resumeLink} alt=\"\"/>\r\n            </button>\r\n\r\n            <h5 className=\"tabDesc\" id=\"resumeDesc\">Resume</h5>\r\n\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"navLink\">\r\n          <a href=\"https://github.com/asnow4u?tab=repositories\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\r\n            <button className=\"button\" id=\"gitLink\"\r\n\r\n              onMouseOver={() => {\r\n                document.getElementById(\"gitLink\").style.backgroundColor = \"black\";\r\n                document.getElementById(\"gitDesc\").style.display = \"block\";\r\n                setGitHubLink(process.env.PUBLIC_URL + '/img/navBar/gitTab_hover.png');\r\n              }}\r\n\r\n              onMouseOut={() => {\r\n                document.getElementById(\"gitLink\").style.backgroundColor = \"rgb(204, 197, 0)\";\r\n                document.getElementById(\"gitDesc\").style.display = \"none\";\r\n                setGitHubLink(process.env.PUBLIC_URL + '/img/navBar/gitTab.png');\r\n              }}>\r\n\r\n              <img className=\"linkImage\" src={gitHubLink} alt=\"\"/>\r\n            </button>\r\n\r\n            <h5 className=\"tabDesc\" id=\"gitDesc\">Github</h5>\r\n\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"navLink\">\r\n          <a href=\"https://www.linkedin.com/in/asnow4u/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\r\n            <button className=\"button\" id=\"linkedInLink\"\r\n\r\n              onMouseOver={() => {\r\n                document.getElementById(\"linkedInLink\").style.backgroundColor = \"black\";\r\n                document.getElementById(\"linkedInDesc\").style.display = \"block\";\r\n              }}\r\n\r\n              onMouseOut={() => {\r\n                document.getElementById(\"linkedInLink\").style.backgroundColor = \"rgb(204, 197, 0)\";\r\n                document.getElementById(\"linkedInDesc\").style.display = \"none\";\r\n              }}>\r\n\r\n              <img className=\"linkImage\" src={linkedInLink} alt=\"\"/>\r\n            </button>\r\n\r\n            <h5 className=\"tabDesc\" id=\"linkedInDesc\">LinkedIn</h5>\r\n\r\n          </a>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CubeView;\r\n","import * as THREE from \"three\";\r\n\r\n//Init each face for the cube\r\nexport const initFaces = (faces, cube, aboutPageArray, topPage, bottomPage) => {\r\n\r\n  faces[0] = new THREE.Group();\r\n  faces[0].cubePosition = \"front\";\r\n  faces[0].position.z += 2.01;\r\n  faces[0].add(aboutPageArray[0]);\r\n  cube.add(faces[0]);\r\n\r\n  faces[1] = new THREE.Group();\r\n  faces[1].cubePosition = \"top\";\r\n  faces[1].position.y += 2.01;\r\n  faces[1].rotateOnAxis(new THREE.Vector3(-1, 0, 0), Math.PI/2);\r\n  faces[1].add(topPage);\r\n  cube.add(faces[1]);\r\n\r\n  faces[2] = new THREE.Group();\r\n  faces[2].cubePosition = \"left\";\r\n  faces[2].position.x -= 2.01;\r\n  faces[2].rotateOnAxis(new THREE.Vector3(0, -1, 0), Math.PI/2);\r\n  faces[2].add(aboutPageArray[aboutPageArray.length -1]);\r\n  cube.add(faces[2]);\r\n\r\n  faces[3] = new THREE.Group();\r\n  faces[3].cubePosition = \"bottom\";\r\n  faces[3].position.y -= 2.01;\r\n  faces[3].rotateOnAxis(new THREE.Vector3(1, 0, 0), Math.PI/2);\r\n  faces[3].add(bottomPage);\r\n  cube.add(faces[3]);\r\n\r\n  faces[4] = new THREE.Group();\r\n  faces[4].cubePosition = \"right\";\r\n  faces[4].position.x += 2.01;\r\n  faces[4].rotateOnAxis(new THREE.Vector3(0, 1, 0), Math.PI/2);\r\n  faces[4].add(aboutPageArray[1]);\r\n  cube.add(faces[4]);\r\n\r\n  faces[5] = new THREE.Group();\r\n  faces[5].cubePosition = \"back\";\r\n  faces[5].position.z -= 2.01;\r\n  faces[5].rotateOnAxis(new THREE.Vector3(0, 1, 0), Math.PI);\r\n  cube.add(faces[5]);\r\n}\r\n\r\n\r\n//Init the about pages with associated counter\r\nexport const loadAboutPages = (pageArray, data) => {\r\n\r\n  const textLoader = new THREE.FontLoader();\r\n  const imageLoader = new THREE.TextureLoader();\r\n\r\n  //Title, About, and Skills\r\n  pageArray[0] = new THREE.Group();\r\n  pageArray[1] = new THREE.Group();\r\n  pageArray[2] = new THREE.Group();\r\n\r\n  textLoader.load('https://threejs.org/examples/fonts/helvetiker_bold.typeface.json', ( font ) => {\r\n\r\n    //Material\r\n    let material = new THREE.LineBasicMaterial({ color: 0xffffff});\r\n\r\n    //Home Title\r\n    const name = font.generateShapes( data.title.name, 0.4);\r\n    const title = font.generateShapes( data.title.jobTitle, 0.3);\r\n    const nameGeometry = new THREE.ShapeGeometry(name);\r\n    const titleGeometry = new THREE.ShapeGeometry(title);\r\n\r\n    nameGeometry.computeBoundingBox();\r\n    titleGeometry.computeBoundingBox();\r\n\r\n    //Fix offset\r\n    let offset = - 0.5 * ( nameGeometry.boundingBox.max.x - nameGeometry.boundingBox.min.x );\r\n    nameGeometry.translate( offset, 0, 0 );\r\n    offset = - 0.5 * ( titleGeometry.boundingBox.max.x - titleGeometry.boundingBox.min.x );\r\n    titleGeometry.translate( offset, 0, 0 );\r\n\r\n    //Title Mesh\r\n    const nameMesh = new THREE.Mesh( nameGeometry, material);\r\n    nameMesh.position.y += 0.5;\r\n    nameMesh.position.z += 0.01;\r\n    const titleMesh = new THREE.Mesh( titleGeometry, material);\r\n    titleMesh.position.y -= 0.5;\r\n    titleMesh.position.z += 0.01;\r\n\r\n    pageArray[0].add(nameMesh);\r\n    pageArray[0].add(titleMesh);\r\n\r\n\r\n    //About Title\r\n    const about = font.generateShapes( data.aboutme.title, 0.4);\r\n    const aboutGeometry = new THREE.ShapeGeometry(about);\r\n\r\n    aboutGeometry.computeBoundingBox();\r\n\r\n    //Fix offset\r\n    offset = - 0.5 * ( aboutGeometry.boundingBox.max.x - aboutGeometry.boundingBox.min.x );\r\n    aboutGeometry.translate( offset, 0, 0 );\r\n\r\n    //About mesh\r\n    const aboutMesh = new THREE.Mesh( aboutGeometry, material);\r\n    aboutMesh.position.y += 0.8;\r\n    aboutMesh.position.z += 0.01;\r\n\r\n    pageArray[1].add(aboutMesh);\r\n\r\n\r\n    //Discription\r\n    let strings = data.aboutme.discription.split(\" \");\r\n    let charLength = 0;\r\n    let discriptions = [];\r\n    let discriptionIndex = 0;\r\n    discriptions[0] = \"\";\r\n\r\n    //Divide discription into chunks that meet a char length limit\r\n    strings.forEach((string) => {\r\n\r\n      if (charLength + string.length > 40) {\r\n        discriptionIndex++;\r\n        discriptions[discriptionIndex] = string + \" \";\r\n        charLength = string.length;\r\n\r\n      } else {\r\n        discriptions[discriptionIndex] = discriptions[discriptionIndex].concat(string + \" \");\r\n        charLength += string.length;\r\n      }\r\n    })\r\n\r\n    //Create mesh for each discription chunk\r\n    discriptions.forEach((disc, index) => {\r\n      let discription = font.generateShapes( disc, 0.12);\r\n      let discriptionGeometry = new THREE.ShapeGeometry(discription);\r\n\r\n      discriptionGeometry.computeBoundingBox();\r\n\r\n      //Fix offset\r\n      offset = - 0.5 * ( discriptionGeometry.boundingBox.max.x - discriptionGeometry.boundingBox.min.x );\r\n      discriptionGeometry.translate( offset, 0, 0 );\r\n\r\n      let discriptionMesh = new THREE.Mesh( discriptionGeometry, material);\r\n\r\n      //Set linewidth based on index\r\n      discriptionMesh.position.y -= 0.2 * index;\r\n      discriptionMesh.position.z += 0.01;\r\n\r\n      pageArray[1].add(discriptionMesh);\r\n    });\r\n\r\n\r\n    //Skill Title\r\n    const skillTitle = font.generateShapes( data.skill.title, 0.4);\r\n    const skillTitleGeometry = new THREE.ShapeGeometry(skillTitle);\r\n\r\n    skillTitleGeometry.computeBoundingBox();\r\n\r\n    //Fix offSet\r\n    offset = - 0.5 * ( skillTitleGeometry.boundingBox.max.x - skillTitleGeometry.boundingBox.min.x );\r\n    skillTitleGeometry.translate( offset, 0, 0 );\r\n\r\n    //Skill mesh\r\n    const skillTitleMesh = new THREE.Mesh( skillTitleGeometry, material);\r\n    skillTitleMesh.position.y += 0.8;\r\n    skillTitleMesh.position.z += 0.01;\r\n\r\n    pageArray[2].add(skillTitleMesh);\r\n\r\n\r\n    //Skill List\r\n    data.skill.skills.forEach((skill, index) => {\r\n      let skillShape = font.generateShapes( skill, 0.12);\r\n      let skillGeometry = new THREE.ShapeGeometry(skillShape);\r\n      skillGeometry.computeBoundingBox();\r\n\r\n      //Fix offSet\r\n      offset = - 0.5 * ( skillGeometry.boundingBox.max.x - skillGeometry.boundingBox.min.x );\r\n      skillGeometry.translate( offset, 0, 0 );\r\n\r\n      let skillMesh = new THREE.Mesh( skillGeometry, material);\r\n      skillMesh.position.x -= 0.8;\r\n      skillMesh.position.y -= 0.2 * index;\r\n      skillMesh.position.z += 0.01;\r\n      pageArray[2].add(skillMesh);\r\n    });\r\n\r\n    //language List\r\n    data.skill.languages.forEach((language, index) => {\r\n      let languageShape = font.generateShapes( language, 0.12);\r\n      let languageGeometry = new THREE.ShapeGeometry(languageShape);\r\n      languageGeometry.computeBoundingBox();\r\n\r\n      //Fix offSet\r\n      offset = - 0.5 * ( languageGeometry.boundingBox.max.x - languageGeometry.boundingBox.min.x );\r\n      languageGeometry.translate( offset, 0, 0 );\r\n\r\n      let languageMesh = new THREE.Mesh( languageGeometry, material);\r\n      languageMesh.position.x += 0.8;\r\n      languageMesh.position.y -= 0.2 * index;\r\n      languageMesh.position.z += 0.01;\r\n      pageArray[2].add(languageMesh);\r\n    });\r\n\r\n  });\r\n\r\n  //image\r\n  let imageGeometry = new THREE.PlaneGeometry(4, 4);\r\n\r\n  //Title Image\r\n  let imageMaterial = new THREE.MeshBasicMaterial({map: imageLoader.load(process.env.PUBLIC_URL + data.title.backgroundImage)});\r\n  let image = new THREE.Mesh( imageGeometry, imageMaterial);\r\n  image.position.z -= 0.001;\r\n  pageArray[0].add(image);\r\n\r\n  //About Me Image\r\n  imageMaterial = new THREE.MeshBasicMaterial({map: imageLoader.load(process.env.PUBLIC_URL + data.aboutme.backgroundImage)});\r\n  image = new THREE.Mesh( imageGeometry, imageMaterial);\r\n  pageArray[1].add(image);\r\n\r\n  //Skill Image\r\n  image = new THREE.Mesh( imageGeometry, imageMaterial);\r\n  pageArray[2].add(image);\r\n\r\n}\r\n\r\n\r\n//Load all projects based on data.json\r\nexport const loadProjectPages = (projects, data, clickable) => {\r\n\r\n  const textLoader = new THREE.FontLoader();\r\n  const imageLoader = new THREE.TextureLoader();\r\n\r\n  //Loop through data\r\n  for (let i=0; i<data.length; i++) {\r\n\r\n    projects[i] = new THREE.Group();\r\n\r\n    //Load text\r\n    textLoader.load('https://threejs.org/examples/fonts/helvetiker_bold.typeface.json', ( font ) => {\r\n\r\n      /* Title\r\n         => Set up the title for the project group utilizing three meshes to accomplish the effect I'm looking for\r\n      */\r\n\r\n      //Front font materials\r\n      let frontFontMaterial = new THREE.LineBasicMaterial({ color: data[i].color});\r\n\r\n      //Background font materials\r\n      let backFontMaterial = new THREE.LineBasicMaterial({\r\n        color: 0x000000,\r\n        side: THREE.DoubleSide\r\n      });\r\n\r\n      //Title geometry\r\n      const title = new THREE.Group();\r\n\r\n      const frontShapes = font.generateShapes( data[i].name, data[i].fontSize);\r\n      const backShapes = font.generateShapes( data[i].name, data[i].fontSize);\r\n\r\n      let frontGeometry = new THREE.ShapeGeometry( frontShapes);\r\n      let backGeometry = new THREE.ShapeGeometry( backShapes);\r\n\r\n      //Fix Offset\r\n      frontGeometry.computeBoundingBox();\r\n      backGeometry.computeBoundingBox();\r\n\r\n      let offset = - 0.5 * ( frontGeometry.boundingBox.max.x - frontGeometry.boundingBox.min.x );\r\n      frontGeometry.translate( offset, 0, 0 );\r\n      offset = - 0.5 * ( backGeometry.boundingBox.max.x - backGeometry.boundingBox.min.x );\r\n      backGeometry.translate( offset, 0, 0 );\r\n\r\n      //Title mesh\r\n      const frontText = new THREE.Mesh( frontGeometry, frontFontMaterial);\r\n      frontText.position.y += 1.25;\r\n      frontText.position.z += 0.01;\r\n      title.add(frontText);\r\n\r\n      const backText = new THREE.Mesh(backGeometry, backFontMaterial);\r\n      backText.position.x -= 0.02;\r\n      backText.position.y += 1.25;\r\n      title.add(backText);\r\n\r\n      //Title Outline\r\n      let edges = new THREE.EdgesGeometry(frontGeometry);\r\n      let outline = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( {color: 0x000000}));\r\n      outline.position.y += 1.25;\r\n      outline.position.z += 0.01;\r\n      title.add(outline);\r\n\r\n      /* Discription\r\n         => Set up short discription based on the project\r\n      */\r\n\r\n      const discription = new THREE.Group();\r\n      discription.position.y += 0.8;\r\n      discription.position.z += 0.01;\r\n\r\n      //Discription material\r\n      let material = new THREE.LineBasicMaterial({ color: data[i].color});\r\n\r\n      //Discription geometry\r\n      let shapes = font.generateShapes(data[i].shortDiscription, 0.16);\r\n      let geometry = new THREE.ShapeGeometry( shapes);\r\n\r\n      //Fix offset\r\n      geometry.computeBoundingBox();\r\n      offset = - 0.5 * ( geometry.boundingBox.max.x - geometry.boundingBox.min.x );\r\n      geometry.translate( offset, 0, 0 );\r\n\r\n      //Discription mesh\r\n      let text = new THREE.Mesh( geometry, material);\r\n      discription.add(text);\r\n\r\n      edges = new THREE.EdgesGeometry(geometry);\r\n      outline = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( {color: 0x000000}));\r\n      outline.position.z += 0.01;\r\n      discription.add(outline);\r\n\r\n\r\n      /* Skills\r\n         => List out the skills based on the project\r\n      */\r\n\r\n      const skillList = new THREE.Group();\r\n      skillList.position.x += 1;\r\n      skillList.position.z += 0.01;\r\n\r\n      material = new THREE.LineBasicMaterial({ color: data[i].color});\r\n\r\n      //Loop through skills\r\n      for (let j=0; j<data[i].skills.length; j++) {\r\n\r\n        let shapes = font.generateShapes(\"<\" + data[i].skills[j] + \">\", 0.16);\r\n        let geometry = new THREE.ShapeGeometry( shapes);\r\n\r\n        geometry.computeBoundingBox();\r\n        offset = - 0.5 * ( geometry.boundingBox.max.x - geometry.boundingBox.min.x );\r\n        geometry.translate( offset, 0, 0 );\r\n        let skill = new THREE.Mesh( geometry, material);\r\n        skill.position.y -= 0.4*j;\r\n        skillList.add(skill);\r\n\r\n        let edges = new THREE.EdgesGeometry(geometry);\r\n        let outline = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( {color: 0x000000}));\r\n        outline.position.y -= 0.4*j;\r\n        outline.position.z += 0.01;\r\n\r\n        skillList.add(outline);\r\n      }\r\n\r\n      //Add text to scene\r\n      projects[i].add(title);\r\n      projects[i].add(discription);\r\n      projects[i].add(skillList);\r\n    });\r\n\r\n    //Background image\r\n    let imageGeometry = new THREE.PlaneGeometry(4, 4);\r\n    let imageMaterial = new THREE.MeshBasicMaterial({map: imageLoader.load(process.env.PUBLIC_URL + data[i].cubeImage), transparent: true, opacity: 0.7});\r\n    let projectImage = new THREE.Mesh( imageGeometry, imageMaterial);\r\n    projectImage.renderOrder = 1;\r\n    projects[i].add(projectImage);\r\n\r\n    //Github links\r\n    let linkGeometry = new THREE.CircleGeometry( 0.28, 50);\r\n    let linkMaterial = new THREE.MeshBasicMaterial({\r\n      map: imageLoader.load(process.env.PUBLIC_URL + '/img/project3DView/githubLink.png'),\r\n      transparent: true\r\n    });\r\n\r\n    let projectGitButton = new THREE.Mesh( linkGeometry, linkMaterial);\r\n\r\n    projectGitButton.renderOrder = 2;\r\n    projectGitButton.position.add(new THREE.Vector3(-1.4, -1.4, 0.01));\r\n    projectGitButton.name = \"gitIcon\";\r\n    projectGitButton.link = data[i].githubLink;\r\n    projectGitButton.hover = false;\r\n\r\n    clickable.push(projectGitButton);\r\n    projects[i].add(projectGitButton);\r\n  }\r\n}\r\n\r\n\r\n//Load contact page based on links from data.json\r\nexport const loadContactPages = (pageArray, data, clickable) => {\r\n\r\n  const textLoader = new THREE.FontLoader();\r\n  const imageLoader = new THREE.TextureLoader();\r\n\r\n  for (let i=0; i<3; i++) {\r\n\r\n    pageArray[i] = new THREE.Group();\r\n\r\n    //Background image\r\n    let imageGeometry = new THREE.PlaneGeometry(4, 4);\r\n    let imageMaterial = new THREE.MeshBasicMaterial({map: imageLoader.load(process.env.PUBLIC_URL + data.backgroundImage)});\r\n    let backgroundImage = new THREE.Mesh( imageGeometry, imageMaterial);\r\n    backgroundImage.position.z -= 0.001;\r\n    pageArray[i].add(backgroundImage);\r\n\r\n\r\n    //Github button link\r\n    let linkGeometry = new THREE.CircleGeometry( 0.7, 50);\r\n    let linkMaterial = new THREE.MeshBasicMaterial({\r\n      map: imageLoader.load(process.env.PUBLIC_URL + data.githubIcon),\r\n      transparent: true,\r\n      depthTest: false\r\n    });\r\n\r\n    const contactGitButton = new THREE.Mesh( linkGeometry, linkMaterial);\r\n\r\n    //Setup properties\r\n    contactGitButton.position.add(new THREE.Vector3(0, 0, 0.1));\r\n    contactGitButton.name = \"gitIcon\";\r\n    contactGitButton.link = data.githubLink;\r\n    contactGitButton.hover = false;\r\n\r\n    //Add as interactable object\r\n    clickable.push(contactGitButton);\r\n\r\n    //Add to page\r\n    pageArray[i].add(contactGitButton);\r\n\r\n\r\n    //LinkedIn button link\r\n    linkMaterial = new THREE.MeshBasicMaterial({\r\n      map: imageLoader.load(process.env.PUBLIC_URL + data.linkedInIcon),\r\n      transparent: true,\r\n      depthTest: false\r\n    });\r\n\r\n    let contactLinkedInButton = new THREE.Mesh( linkGeometry, linkMaterial);\r\n\r\n    //Setup properties\r\n    contactLinkedInButton.position.add(new THREE.Vector3(1.2, 0, 0.1));\r\n    contactLinkedInButton.name = \"linkedInIcon\";\r\n    contactLinkedInButton.link = data.linkedinLink;\r\n    contactLinkedInButton.hover = false;\r\n\r\n    //Add as interactable object\r\n    clickable.push(contactLinkedInButton);\r\n\r\n    //Add to page\r\n    pageArray[i].add(contactLinkedInButton);\r\n\r\n\r\n    //Email button link\r\n    linkMaterial = new THREE.MeshBasicMaterial({\r\n      map: imageLoader.load(process.env.PUBLIC_URL + data.emailIcon),\r\n      transparent: true,\r\n      depthTest: false\r\n    });\r\n\r\n    let contactEmailButton = new THREE.Mesh( linkGeometry, linkMaterial);\r\n\r\n    //Setup properties\r\n    contactEmailButton.position.add(new THREE.Vector3(-1.2, 0, 0.1));\r\n    contactEmailButton.name = \"emailIcon\";\r\n    contactEmailButton.link = \"mailto:asnow4u@gmail.com\";\r\n    contactEmailButton.hover = false;\r\n\r\n    //Add as interactable\r\n    clickable.push(contactEmailButton);\r\n\r\n    //Add to page\r\n    pageArray[i].add(contactEmailButton);\r\n\r\n\r\n    //Load title and discriptions\r\n    textLoader.load('https://threejs.org/examples/fonts/helvetiker_bold.typeface.json', ( font ) => {\r\n\r\n      //Text material\r\n      let material = new THREE.LineBasicMaterial({\r\n        color: 0x000000\r\n      });\r\n\r\n      //Title\r\n      const shape = font.generateShapes( \"Contact Me\", 0.4);\r\n      const geometry = new THREE.ShapeGeometry(shape);\r\n      geometry.computeBoundingBox();\r\n      let offset = - 0.5 * ( geometry.boundingBox.max.x - geometry.boundingBox.min.x );\r\n      geometry.translate( offset, 0, 0 );\r\n\r\n      const mesh = new THREE.Mesh( geometry, material);\r\n      mesh.position.y += 1.25;\r\n\r\n      pageArray[i].add(mesh);\r\n\r\n\r\n      const hoverDiscription = new THREE.Group();\r\n      hoverDiscription.name = \"hoverDiscriptions\";\r\n\r\n\r\n      //Default discription\r\n      const defaultShape = font.generateShapes( data.defaultDiscription, 0.25);\r\n      const defaultGeometry = new THREE.ShapeGeometry(defaultShape);\r\n      defaultGeometry.computeBoundingBox();\r\n      offset = - 0.5 * ( defaultGeometry.boundingBox.max.x - defaultGeometry.boundingBox.min.x );\r\n      defaultGeometry.translate( offset, 0, 0 );\r\n\r\n      const defaultMesh = new THREE.Mesh( defaultGeometry, material);\r\n\r\n      defaultMesh.position.y -= 1.3;\r\n      defaultMesh.visible = true;\r\n      defaultMesh.name = \"defaultDiscription\";\r\n\r\n      hoverDiscription.add(defaultMesh);\r\n\r\n\r\n      //Email Hover Discription\r\n      const emailShape = font.generateShapes( data.emailDiscription, 0.2);\r\n      const emailGeometry = new THREE.ShapeGeometry(emailShape);\r\n      emailGeometry.computeBoundingBox();\r\n      offset = - 0.5 * ( emailGeometry.boundingBox.max.x - emailGeometry.boundingBox.min.x );\r\n      emailGeometry.translate( offset, 0, 0 );\r\n\r\n      const emailMesh = new THREE.Mesh( emailGeometry, material);\r\n\r\n      emailMesh.position.y -= 1.3;\r\n      emailMesh.visible = false;\r\n      emailMesh.name = \"emailDiscription\";\r\n\r\n      hoverDiscription.add(emailMesh);\r\n\r\n\r\n      //GitHub Hover Discription\r\n      const gitHubShape = font.generateShapes( data.gitHubDiscription, 0.2);\r\n      const gitHubGeometry = new THREE.ShapeGeometry(gitHubShape);\r\n      gitHubGeometry.computeBoundingBox();\r\n      offset = - 0.5 * ( gitHubGeometry.boundingBox.max.x - gitHubGeometry.boundingBox.min.x );\r\n      gitHubGeometry.translate( offset, 0, 0 );\r\n\r\n      const gitHubMesh = new THREE.Mesh( gitHubGeometry, material);\r\n\r\n      gitHubMesh.position.y -= 1.25;\r\n      gitHubMesh.visible = false;\r\n      gitHubMesh.name = \"gitHubDiscription\";\r\n\r\n      hoverDiscription.add(gitHubMesh);\r\n\r\n      //linkedIn Hover Discription\r\n      const linkedInShape = font.generateShapes( data.linkedInDiscription, 0.2);\r\n      const linkedInGeometry = new THREE.ShapeGeometry(linkedInShape);\r\n      linkedInGeometry.computeBoundingBox();\r\n      offset = - 0.5 * ( linkedInGeometry.boundingBox.max.x - linkedInGeometry.boundingBox.min.x );\r\n      linkedInGeometry.translate( offset, 0, 0 );\r\n\r\n      const linkedInMesh = new THREE.Mesh( linkedInGeometry, material);\r\n\r\n      linkedInMesh.position.y -= 1.3;\r\n      linkedInMesh.visible = false;\r\n      linkedInMesh.name = \"linkedInDiscription\";\r\n\r\n      hoverDiscription.add(linkedInMesh);\r\n\r\n\r\n      pageArray[i].add(hoverDiscription);\r\n\r\n    });\r\n  }\r\n}\r\n","import * as THREE from \"three\";\r\n\r\n//Init star background\r\nexport const initStarBackGround = (scene) => {\r\n\r\n  const starCount = 2000;\r\n  const starGeometry = new THREE.BufferGeometry();\r\n\r\n  const starArray = new Float32Array(starCount * 3); //Account for x, y, z\r\n\r\n  for (let i=0; i<starCount; i++) {\r\n    starArray[i] = (Math.random() - 0.5) * 20;\r\n  }\r\n\r\n  starGeometry.setAttribute('position', new THREE.BufferAttribute(starArray, 3));\r\n\r\n  const starMaterial = new THREE.PointsMaterial({\r\n    color: 0xffffff,\r\n    size: 0.03\r\n  });\r\n\r\n  const starField = new THREE.Points(starGeometry, starMaterial);\r\n  starField.name = \"starField\";\r\n\r\n  scene.add(starField);\r\n}\r\n\r\n\r\n//Animate star background\r\nexport const backgroundStarAnimation = (stars) => {\r\n\r\n  //Star Field\r\n  stars.rotateOnAxis(new THREE.Vector3(1, 0, 0), 0.005);\r\n}\r\n","import React from 'react';\r\nimport Navbar from './components/navbar/Navbar';\r\nimport ProfileInfo from './components/profile/Profile';\r\nimport AboutMe from './components/aboutMe/AboutMe';\r\nimport Project from './components/project/Project';\r\nimport Contact from './components/contact/Contact';\r\nimport CubeView from './components/cubeView/CubeView';\r\nimport './app.css';\r\nimport * as data from './data.json';\r\n\r\nconst App = () => {\r\n\r\n  const [visual3DState, setVisual3DState] = React.useState(window.innerWidth<700 ? false : true);\r\n\r\n  window.addEventListener('resize', () => {\r\n    if (window.innerWidth < 700 || window.innerHeight < 600) {\r\n      setVisual3DState(false);\r\n    } else {\r\n      setVisual3DState(true);\r\n    }\r\n  });\r\n\r\n\r\n  if (visual3DState) {\r\n\r\n    return (\r\n      <div>\r\n        <CubeView changeVisual={setVisual3DState} data={data}/>\r\n      </div>\r\n    );\r\n\r\n  } else {\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"backgroundLines\">\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n        </div>\r\n        <Navbar changeVisual={setVisual3DState}/>\r\n        <ProfileInfo data={data.default.main.title}/>\r\n        <AboutMe data={data.default.main.aboutme}/>\r\n        <Project data={data.default.project}/>\r\n        <Contact />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}